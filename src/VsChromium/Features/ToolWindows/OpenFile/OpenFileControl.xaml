<UserControl x:Class="VsChromium.Features.ToolWindows.OpenFile.OpenFileControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
             xmlns:wpf="clr-namespace:VsChromium.Wpf"
             xmlns:theme="clr-namespace:VsChromium.Views"
             xmlns:toolWindows="clr-namespace:VsChromium.Features.ToolWindows"
             xmlns:openfile="clr-namespace:VsChromium.Features.ToolWindows.OpenFile"
             xmlns:scm ="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:dat ="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="900"
             d:DataContext="{d:DesignInstance openfile:OpenFileViewModel, IsDesignTimeCreatable=True}"
             x:Name="OpenFileToolWindow"
             Background="{DynamicResource VsBrush.ToolWindowBackground}"
             Foreground="{DynamicResource VsBrush.ToolWindowText}"
             HorizontalAlignment="Stretch"
             Padding="10">
    <UserControl.Resources>
        <openfile:MockOpenFileViewModel x:Key="mockViewModel"/>
        <!-- Hide context menu items if they are not enabled -->
        <Style TargetType="MenuItem">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Canvas.Right" Value="-9"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListView">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Foreground" Value="{DynamicResource VsBrush.WindowText}"/>
            <Setter Property="Background" Value="{DynamicResource VsBrush.ToolWindowBackground}"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}"/>
            <Setter Property="Padding"  Value="5,2,5,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid Background="{TemplateBinding Background}">
                            <Border Name="SelectionBorder" Visibility="Collapsed" BorderThickness="1" />
                            <Border Name="Selection" Visibility="Collapsed" />
                            <!-- This is used when GridView is put inside the ListView -->
                            <GridViewRowPresenter Grid.RowSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Selection" Property="Opacity" Value="0.05"/>
                                <Setter TargetName="Selection" Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.HighlightKey}}"/>
                                <Setter TargetName="SelectionBorder" Property="BorderBrush" Value="{DynamicResource {x:Static vsfx:VsBrushes.HighlightKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Selection" Property="Opacity" Value="0.25"/>
                                <Setter TargetName="Selection" Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.HighlightKey}}"/>
                                <Setter TargetName="SelectionBorder" Property="BorderBrush" Value="{DynamicResource {x:Static vsfx:VsBrushes.HighlightKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
        </Style>
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="4,3,4,3"/>
            <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7"/>
                                    <RowDefinition/>
                                    <RowDefinition MaxHeight="1"/>
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2" Name="HeaderBorder" BorderThickness="0" Opacity="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                                <Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
                                        <ContentPresenter Name="HeaderContent"
                                            Margin="0,0,0,1"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <Rectangle Grid.Row="2" Height="1" Fill="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}"/>
                                </Grid>
                            <Canvas>
                                <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" Visibility="Visible"/>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.HighlightKey}}"/>
                                <Setter TargetName="HeaderBorder" Property="Opacity" Value="0.25"/>
                                <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent"/>
                                <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.HighlightTextKey}}"/>
                                <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.HighlightKey}}"/>
                                <Setter TargetName="HeaderBorder" Property="Opacity" Value="1"/>
                                <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <!-- Override default template behavior which is hard-coded to set Foregroud
             color to "White" on "IsKeyboardFocusWithin" -->
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}"/>
            <Setter Property="Background" Value="{DynamicResource VsBrush.ComboBoxBackground}"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Text" Value="{Binding NewItem, UpdateSourceTrigger=LostFocus}"/>
        </Style>
        <CollectionViewSource Source="{Binding FileList}" x:Key="FileListView">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Filename"/>
                <scm:SortDescription PropertyName="Path"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="4" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}">
            <ListView
                d:DataContext="{StaticResource mockViewModel}"
                ItemsSource="{Binding Source={StaticResource FileListView}}"
                x:Name="FileListView" Height="auto"
                VirtualizingStackPanel.IsVirtualizing="False"
                VirtualizingStackPanel.VirtualizationMode="Recycling"
                PreviewKeyDown="FileListView_PreviewKeyDown"
                GridViewColumnHeader.Click="GridViewColumnHeader_Click">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Filename" Width="350" DisplayMemberBinding="{Binding Filename}" />
                        <GridViewColumn Header="Path" Width="Auto" DisplayMemberBinding="{Binding Path}" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Border>

        <!-- SEARCH AREA -->
        <Border Grid.Row="2" BorderBrush="Gray" >
            <StackPanel HorizontalAlignment="Stretch" Margin="4,4,4,0" Orientation="Vertical">
                <!-- Search Boxes -->
                <Grid HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- File Search -->
                    <Grid Grid.Row="{Binding FileSearchRow}" Grid.Column="{Binding FileSearchColumn}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*" MinWidth="100"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="File Paths:" VerticalAlignment="Center" Foreground="{DynamicResource VsBrush.WindowText}" />
                        <TextBox Grid.Row="0" Grid.Column="1" 
                                 x:Name="SearchFileTextBox" PreviewKeyDown="SearchFileTextBox_PreviewKeyDown">
                        </TextBox>
                        <Button Grid.Row="0" Grid.Column="2" IsTabStop="False"
                              Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Foreground="{DynamicResource {x:Static vsfx:VsBrushes.WindowTextKey}}"
                              Background="Transparent"
                              Click="ClearFilePathsPattern_Click"
                              FontFamily="Segoe UI Symbol" Content="&#xE10A;">
                            <Button.ToolTip>
                                <TextBlock Text="Clear file paths"/>
                            </Button.ToolTip>
                        </Button>
                    </Grid>
                </Grid>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>































